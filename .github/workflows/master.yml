name: Artefact Release

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-java@master
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Compile
        run: make compile
      # Persist the build folder
      - uses: actions/upload-artifact@master
        with:
          name: build
          path: build

  publish-artifact:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      # Download the build folder
      - uses: actions/download-artifact@master
        with:
          name: build
          path: build
      - name: publish artefact
        env:
          # Github will generate the token for the actor
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        #        run: echo "Pushing artefact"
        run: make publish

  publish-docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      # Download the build folder
      - uses: actions/download-artifact@master
        with:
          name: build
          path: build
      - name: Github Docker login
        env:
          # Github will generate the token for the actor
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: make docker-login
      - name: Build Docker
        #run: echo "Building docker"
        run: make docker-build
      - name: Publish docker
        #run: echo "Pushing docker"
        run: make docker-push

  release:
    needs: [ publish-artifact, publish-docker ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Read file Version
        id: version_file
        uses: andstor/file-reader-action@v1
        with:
          path: "version.txt"

      - name: Read file Change Log file
        id: changelog_file
        uses: andstor/file-reader-action@v1
        with:
          path: "changelog.md"

      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version_file.outputs.contents }}
          release_name: Release ${{ steps.version_file.outputs.contents }}
          body: ${{ steps.changelog_file.outputs.contents }}

  deploy-dev:
    needs: [ release ]
    runs-on: ubuntu-latest
    steps:
      - name: Publish docker
        run: echo "deploying to dev"
